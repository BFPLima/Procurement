@model Procurement.Model.Users.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Please confirm your profile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)


        <div class="form-group">

            <label class="control-label col-md-2">User Type   </label>
            <div class="col-md-10">

                @{
                    if (Model.UserType == Procurement.Model.Enums.UserType.Custumer)
                    {
                        <label class="control-label col-md-2">Custumer</label>
                    }
                    else if (Model.UserType == Procurement.Model.Enums.UserType.Supplier)
                    {
                        <label class="control-label col-md-2">Supplier</label>
                    }
                }
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Last Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">

         


            <label class="control-label col-md-2"> Legal Personality </label>
            <div class="col-md-2">
                @Html.RadioButtonFor(model => model.LegalPersonality, 1, new { id = 1, @checked = true })
                <label for="1">Physical Person</label>
            </div>
            <div class="col-md-2">
                @Html.RadioButtonFor(model => model.LegalPersonality, 2, new { id = 2, })
                <label for="2">Jurical Person</label>
            </div>


        </div>*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
