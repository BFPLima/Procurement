@model Procurement.Model.Entities.TemplateItem

@{
    ViewBag.Title = "Details";
    List<Procurement.Model.Entities.TemplateAttribute> attributes = (List<Procurement.Model.Entities.TemplateAttribute>)this.ViewBag.Attributes;
}

<h2>Details</h2>


@*@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
    {
        @Html.AntiForgeryToken()
    }*@


<div>

    <h4>Template Item</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>


    </dl>
</div>
<hr />
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
<p />

<div class="container">

    <h2 style="text-align:center;">Templates Attributes</h2>


    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divModalAddAttribute" onclick="clearTextBox();">Add Attribute</button>
    <br/><br />
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>

            <th>

            </th>
            <th></th>
        </tr>



        @foreach (var tempAttribute in attributes)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => tempAttribute.Name)
                </td>

                <td>
                    @*@Html.ActionLink("Delete", "Delete", "TemplateAttribute", new { id = tempAttribute.ID }, null)

                        @{string.Format("<a  onclick=''>Delete</a>", item.Url) }*@


                    <button type="button" class="btn btn-danger" onclick="return deleleTemplateAttribute(@tempAttribute.ID);">Delete</button>
                </td>
            </tr>
        }

    </table>

</div>






<div class="modal fade" id="divModalAddAttribute" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title" id="myModalLabel">Add Template Attribute</h4>
            </div>
            <div class="modal-body">
                <form>

                    <div class="form-group">
                        <label for="Name">Name</label>
                        <input type="text" class="form-control" id="Name" placeholder="Name" />
                    </div>
                    <div class="form-group">
                        <label for="Description">Description</label>
                        <input type="text" class="form-control" id="Description" placeholder="Description" />
                    </div>


                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnAdd" onclick="return addTemplateAttribute();">Create</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts    {



    <script>

        function addTemplateAttribute() {
            var res = validate();
            if (res == false) {
                return false;
            }

            //var form = $('#__AjaxAntiForgeryForm');
            //var token = $('input[name="__RequestVerificationToken"]', form).val();

            var templateAttribute = {
                templateItemID : @Model.ID,
                name: $('#Name').val(),
                description: $('#Description').val(),
                //  __RequestVerificationToken: token
            };


            $.ajax({
                url: "/Admin/TemplateAttribute/Create",
                data: JSON.stringify(templateAttribute),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    $('#divModalAddAttribute').modal('hide');
                    alert('Template Attribute include with success!');
                    window.location.reload();

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function validate() {
            var isValid = true;
            if ($('#Name').val().trim() == "") {
                $('#Name').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#Name').css('border-color', 'lightgrey');
            }

            if ($('#Description').val().trim() == "") {
                $('#Description').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#Description').css('border-color', 'lightgrey');
            }

            return isValid;
        }

        function deleleTemplateAttribute(ID) {
            var ans = confirm("Are you sure you want to delete this Template Attribute ?");
            if (ans) {

                var templateAttribute = {
                    templateItemID : @Model.ID,
                    templateAttributeID: ID
                };
                $.ajax({
                    url: "/Admin/TemplateAttribute/Delete",
                    type: "POST",
                    data: JSON.stringify(templateAttribute),
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        }




    </script>
}